DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS requests CASCADE;
DROP TABLE IF EXISTS items CASCADE;
DROP TABLE IF EXISTS bookings CASCADE;
DROP TABLE IF EXISTS comments CASCADE;


-- создание таблицы users
CREATE TABLE IF NOT EXISTS users (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  name VARCHAR(255) NOT NULL,
  email VARCHAR(512) NOT NULL,
  CONSTRAINT pk_user PRIMARY KEY (id),
  CONSTRAINT uk_user_email UNIQUE (email)
);

-- создание таблицы requests
CREATE TABLE requests (
    request_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    description TEXT NOT NULL,
    requestor_id BIGINT NOT NULL,
    created TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CONSTRAINT pk_requests PRIMARY KEY (request_id),
    CONSTRAINT fk_requestor FOREIGN KEY (requestor_id) REFERENCES users(id)
);

-- создание таблицы items
CREATE TABLE IF NOT EXISTS items (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  name VARCHAR(255) NOT NULL,
  description TEXT,
  available BOOLEAN NOT NULL,
  owner_id BIGINT,
  request_id BIGINT,
  CONSTRAINT pk_item PRIMARY KEY (id),
  CONSTRAINT fk_request FOREIGN KEY (request_id) REFERENCES requests(request_id),
  CONSTRAINT fk_owner FOREIGN KEY (owner_id) REFERENCES users(id)
);

-- создание таблицы bookings
CREATE TABLE IF NOT exists bookings (
    booking_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    starting TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    ending TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    item_id BIGINT NOT NULL,
    booker_id BIGINT NOT NULL,
    status VARCHAR(20) CHECK (status IN ('WAITING', 'APPROVED', 'REJECTED', 'CANCELED')),
    CONSTRAINT pk_bookings PRIMARY KEY (booking_id),
    CONSTRAINT fk_item FOREIGN KEY (item_id) REFERENCES items(id),
    CONSTRAINT fk_booker FOREIGN KEY (booker_id) REFERENCES users(id)
);

-- создание таблицы Comments
CREATE TABLE IF NOT EXISTS comments (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  text VARCHAR(1000) NOT NULL,
  item_id BIGINT NOT NULL,
  author_id BIGINT NOT NULL,
  created TIMESTAMP WITHOUT TIME ZONE NOT NULL,
  CONSTRAINT pk_comment PRIMARY KEY (id),
  CONSTRAINT fk_item_comment FOREIGN KEY (item_id) REFERENCES items(id),
  CONSTRAINT fk_author FOREIGN KEY (author_id) REFERENCES users(id)
);
